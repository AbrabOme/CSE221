# -*- coding: utf-8 -*-
"""Task1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18VIT-kRKrafjoCOUimUq6ydJoLSJSm82
"""

#Task1

task1_input = open(file='input1.txt', mode='r')
task1_output = open(file='output1.txt', mode='w')
num = int(task1_input.readline().strip())
f_lis = task1_input.readline().strip().split()
count = 0

def merge(left,right):

    n = []
    i = 0
    j = 0

    while i < len(left) and j < len(right):

        if left[int(i)]<= right[int(j)]:
            n.append(int(left[i]))
            i += 1
        else:
            n.append(int(right[j]))
            j += 1


    while i < len(left):
        n.append(int(left[i]))
        i+=1

    while j < len(right):
        n.append(int(right[j]))
        j+=1


    return n

def mergeSort(arr):
    global count
    if len(arr) <= 1:
        return arr
    else:
        mid = len(arr)//2
        left = arr[:mid]
        right = arr[mid:]
        x = mergeSort(left)
        y = mergeSort(right)

    i = 0
    j = 0

    while True:
        if i == len(x) or j == len(y):
            break

        if x[int(i)] > y[int(j)]:
            count += len(x)-i
            j +=1

        elif x[int(i)] < y[int(j)]:
            i += 1



    return merge(x,y)
answer=mergeSort(f_lis)

task1_output.write(str(count))