# -*- coding: utf-8 -*-
"""task3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19VFBjSX1xIt48tp7F3yWWtRg2qknqPee
"""

#task3

import math
from queue import  PriorityQueue

task3_input = open(file='input3_1.txt', mode='r')
task3_output = open(file='output3_1.txt', mode='w')


lst = task3_input.readline().strip().split(" ")

v = int(lst[0])
e = int(lst[1])

adj_list = {}

for i in range(1,v+1):
    adj_list[i] = []

for i in range(e):
    lst2 = task3_input.readline().strip().split()
    u = int(lst2[0])
    v = int(lst2[1])
    w = int(lst2[2])

    adj_list[u].append((w,v))

st = 1

def Safe_Path (graph,st) :
    dis_list = []
    dist = [math.inf]*(v+1)

    dist[st]= 0
    q = PriorityQueue()
    q.put((0,st))
    visited = 0

    while q.empty() == False:
        val,nod = q.get()

        dis_list.append(nod)

        if(val < dist[nod]) :
            dist[nod] = val

        for i in graph[nod]:

            visited = max(val,i[0])

            if(i[1] not in dis_list):
                q.put((visited,i[1]))

    return dist[-1]

x = Safe_Path(adj_list,st)
task3_output.write(str(x))


task3_input.close()
task3_output.close()